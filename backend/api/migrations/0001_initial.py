# Generated by Django 5.1.7 on 2025-03-27 19:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chat Session',
                'verbose_name_plural': 'Chat Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('bug', 'Error Report'), ('feature', 'Feature Suggestion'), ('usability', 'Usability'), ('other', 'Other')], max_length=20, verbose_name='Feedback Type')),
                ('content', models.TextField(verbose_name='Feedback Content')),
                ('wechat', models.CharField(blank=True, max_length=50, null=True, verbose_name='WeChat')),
                ('source', models.CharField(default='web', max_length=50, verbose_name='Feedback Source')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Page URL')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('is_adopted', models.BooleanField(default=False, verbose_name='Whether adopted')),
                ('adopted_at', models.DateTimeField(blank=True, null=True, verbose_name='Adopted Time')),
                ('reward_given', models.BooleanField(default=False, verbose_name='Whether a reward has been issued')),
                ('reward_note', models.CharField(blank=True, max_length=255, null=True, verbose_name='Reward Note')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
                ('is_processed', models.BooleanField(default=False, verbose_name='Whether processed')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Processed Time')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedbacks', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Feedback',
                'verbose_name_plural': 'User Feedback',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_login_count', models.PositiveIntegerField(default=0)),
                ('total_session_time', models.PositiveIntegerField(default=0)),
                ('videos_count', models.PositiveIntegerField(default=0)),
                ('favorite_words_count', models.PositiveIntegerField(default=0)),
                ('sentences_count', models.PositiveIntegerField(default=0)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('first_seen', models.DateTimeField(auto_now_add=True)),
                ('is_active_user', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Metrics',
                'verbose_name_plural': 'User Metrics',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('device_type', models.CharField(blank=True, max_length=20, null=True)),
                ('browser', models.CharField(blank=True, max_length=100, null=True)),
                ('os', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('view_video', 'View Video'), ('save_subtitle', 'Save Subtitle'), ('lookup_word', 'Lookup Word'), ('add_sentence', 'Add Sentence'), ('favorite_word', 'Favorite Word'), ('extension_use', 'Use Extension'), ('other', 'Other')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField(blank=True, null=True)),
                ('url', models.URLField(blank=True, max_length=500, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='api.usersession')),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=255)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('platform', models.CharField(default='YouTube', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chat_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='session_videos', to='api.chatsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'url')},
            },
        ),
        migrations.CreateModel(
            name='Subtitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('start_time', models.FloatField()),
                ('end_time', models.FloatField()),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtitles', to='api.video')),
            ],
        ),
        migrations.CreateModel(
            name='Sentence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('translation', models.TextField(blank=True)),
                ('start_time', models.FloatField(blank=True, null=True)),
                ('end_time', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentences', to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sentences', to='api.video')),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('user', 'User'), ('assistant', 'Assistant'), ('system', 'System')], max_length=20)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='api.chatsession')),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chat_messages', to='api.video')),
            ],
            options={
                'verbose_name': 'Chat Message',
                'verbose_name_plural': 'Chat Messages',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='WordDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
                ('language', models.CharField(default='en', max_length=20)),
                ('translation', models.TextField(blank=True)),
                ('web_translation', models.TextField(blank=True)),
                ('uk_phonetic', models.CharField(blank=True, max_length=100)),
                ('us_phonetic', models.CharField(blank=True, max_length=100)),
                ('phonetic', models.CharField(blank=True, max_length=100)),
                ('has_audio', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('text', 'language')},
            },
        ),
        migrations.CreateModel(
            name='UserWord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('is_favorite', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_seen_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_words', to=settings.AUTH_USER_MODEL)),
                ('word_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_words', to='api.worddefinition')),
            ],
            options={
                'unique_together': {('user', 'word_definition')},
            },
        ),
        migrations.CreateModel(
            name='WordReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context_start', models.IntegerField(default=0)),
                ('context_end', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subtitle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='word_references', to='api.subtitle')),
                ('user_word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='api.userword')),
            ],
            options={
                'unique_together': {('user_word', 'subtitle')},
            },
        ),
    ]
